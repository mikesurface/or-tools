// Copyright 2010-2013 Google
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package operations_research;

// Storage for IntVars.
message IntVarAssignmentProto {
  optional string var_id = 1;
  optional int64 min = 2;
  optional int64 max = 3;  // if undefined -> == min.
  optional bool active = 4 [default = true];
}

// Storage for IntervalVars.
message IntervalVarAssignmentProto {
  optional string var_id = 1;
  optional int64 start_min = 2;
  optional int64 start_max = 3;  // if undefined -> == start_min.
  optional int64 duration_min = 4;
  optional int64 duration_max = 5;  // if undefined -> == duration_min.
  optional int64 end_min = 6;
  optional int64 end_max = 7;  // if undefined -> == end_min.
  optional int64 performed_min = 8;
  optional int64 performed_max = 9;  // if undefined -> performed_min.
  optional bool active = 10 [default = true];
}

// Storage for SequenceVars.
message SequenceVarAssignmentProto {
  optional string var_id = 1;
  repeated int32 forward_sequence = 2;
  repeated int32 backward_sequence = 3;
  repeated int32 unperformed = 4;
  optional bool active = 5 [default = true];
}

// This optional message indicates how the assignment was produced.
message WorkerInfo {
  optional int32 worker_id = 1;
  optional string bns = 2;
}

// Global container for all assignment variables and objective
message AssignmentProto {
  repeated IntVarAssignmentProto int_var_assignment = 1;
  repeated IntervalVarAssignmentProto interval_var_assignment = 2;
  repeated SequenceVarAssignmentProto sequence_var_assignment = 6;
  optional IntVarAssignmentProto objective = 3;
  optional WorkerInfo worker_info = 4;
  optional bool is_valid = 5 [default = true];
}

